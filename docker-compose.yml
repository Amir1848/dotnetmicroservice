version: '3.8'
services:
  fumRabbit:
    image: rabbitmq:alpine
    expose:
      - 5672
    volumes:
      - './rabbitmq-volume:/var/lib/rabbitmq'

  fumlogger: 
    build: ./AppSrc/logger
    environment:
      - API_MODE=production

  fumGenralPostgres:
    image: postgres:alpine
    environment:
      POSTGRES_PASSWORD: 1
      POSTGRES_USER: postgres
      POSTGRES_DB: FumGeneral
    expose:
      - 5432
    volumes:
      - ./fum-general-postgres-volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  fumgeneralapi:
    build: 
      context: ./AppSrc
      dockerfile: GenralApi.Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://localhost:5000
    ports:
      - 6542:5000
    depends_on:
      - fumGenralPostgres
      - fumRabbit

  fumgeneralgrpc:
    build: 
      context: ./AppSrc
      dockerfile: GeneralGrpc.Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://localhost:5000
    depends_on:
      - fumGenralPostgres
      - fumRabbit
  


  # fumCalculationsPostgres:
  #   image: postgres:alpine
  #   environment:
  #     POSTGRES_PASSWORD: 1
  #     POSTGRES_USER: postgres
  #     POSTGRES_DB: FumGeneral
  #   expose:
  #     - 5432
  #   volumes:
  #     - ./fum-general-postgres-volume:/var/lib/postgresql/data

  # fumcalculationapi:
  #   build: 
  #     context: ./AppSrc
  #     dockerfile: CalculationsApi.Dockerfile
  #   environment:
  #     - ASPNETCORE_ENVIRONMENT=Production
  #     - ASPNETCORE_URLS=http://localhost:5000

